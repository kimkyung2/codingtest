# -*- coding: utf-8 -*-
"""
Created on Thu Dec  8 17:38:52 2022

@author: kki
"""

# 10799번 쇠막대기

# 여러 개의 쇠막대기를 레이저로 절단하려고 함. 효율적인 작업을 위해서 쇠막대기를 아래에서 위로 겹쳐 놓고, 레이저를 위에서 수직으로 발사하여 쇠막대기들을 자름
# 쇠막대기와 레이저의 배치는 다음 조건을 만족
# 1) 쇠막대기는 자신보다 긴 쇠막대기 위에만 놓일 수 있음 - 쇠막대기를 다른 쇠막대기 위에서 놓는 경우 오나전히 포함하도록 놓되, 끝점은 겹치지 않도록 놓음
# 2) 각 쇠막대기를 자르는 레이저는 적어도 하나 존재
# 3) 레이저는 어떤 쇠막대기의 양 끝점과도 겹치지 않음

# 레이저와 쇠막대기의 배치는 다음과 같이 괄호를 이용하여 왼쪽부터 순서대로 표현할 수 있음
# 1) 레이저는 여는 괄호와 닫는 괄호의 인접한 쌍 '( )'으로 표현, 또한 모든'( )'는 반드시 레이저를 표현
# 2) 쇠막대기는 왼쪽 끝은 여는 괄호 '('로, 오른쪽 끝은 닫힌 괄호 ')'로 표현됨

# 쇠막대기는 레이저에 의해 몇 개의 조각으로 잘려지는데, 위 예에서 가장 위에 있는 두 개의 쇠막대기는 각각 3개와 2개의 조각으로 잘려지고,
# 이와 같은 방식으로 주어진 쇠막대기들은 총 17개의 조각으로 잘려짐
# 쇠막대기와 레이저의 배치를 나타내는 괄호 표현이 주어졌을 때, 잘려진 쇠막대기 조각의 총 개수를 구하는 프로그램을 작성

bar = list(input())
answer = 0
stack = []

for i in range(len(bar)):
    # '('이 나오면 stack에 push
    if bar[i] == '(': 
        stack.append('(')
    else:
        # ')'이 나올 경우 그 전 문자열이 '('일 경우 stack에서 1개를 pop하고, 스택의 크기만큼 result에 더함
        if bar[i-1] == '(':
            stack.pop()
            answer += len(stack)
            
        # ')'이 나오고 그 전 문자열이 ')'일 경우 막대기가 잇는 것이므로 stack에서 1개를 popg=하고 result에 1을 증가    
        else:
            stack.pop()
            answer += 1
            
print(answer)
        